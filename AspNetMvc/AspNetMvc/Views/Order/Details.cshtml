@model AspNetMvc.Models.OrderModel

@{
    ViewBag.Title = "Details";
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryunobtrusive")
    <script>
        $(function () {
            $.ajax({
                url: "@Url.Action("OrderDetails", "Order", new { id = Model.OrderID })",
                success: function (data) {
                    $("#detailsContainer").html(data);
                }
            });

            $("#btnSortByName").click(function (e) {
                $.ajax({
                    url: "@Url.Action("OrderDetails", "Order", new { id = Model.OrderID })?sortby=name",
                    success: function (data) {
                        $("#detailsContainer").html(data);
                    }
                });
            });
        })
</script>
}

<h2>Details</h2>

<div class="row">
    <h4>Order Model</h4>
    <hr />
    <dl class="dl-horizontal col-md-6">
        <dt>
            @Html.DisplayNameFor(model => model.OrderID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OrderID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustomerID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustomerName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmployeeID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmployeeID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmployeeName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmployeeName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OrderDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OrderDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RequiredDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RequiredDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShippedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShippedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Freight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Freight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipCity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipCity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipRegion)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipRegion)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipPostalCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipPostalCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipCountry)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipCountry)
        </dd>

    </dl>

    <div class="col-md-6">
        <h3>Items Ordered</h3>
        <button class="btn btn-primary" id="btnSortByName">Sort By Name</button>
        @Ajax.ActionLink("Sort By Name", "OrderDetails", "Order", new { id = Model.OrderID }, new AjaxOptions { UpdateTargetId = "detailsContainer" })
        <div id="detailsContainer"></div>
    </div>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
</p>
